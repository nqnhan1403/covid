{"version":3,"sources":["components/Header/Header.module.css","pages/Covid/Covid.module.css","pages/About/About.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/TabNavigate/TabNavigate.jsx","components/Header/Header.jsx","pages/Covid/index.js","pages/About/index.js","App.js","index.js","components/Charts/Charts.module.css","components/TabNavigate/TabNavigate.module.css","components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","props","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","item","xs","md","Paper","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchCountries","countries","map","name","fetchTop10Infected","slice","fetchTop10Recovered","fetchTop10Deaths","Charts","useState","top10Infected","setTop10Infected","top10Recovered","setTop10Recovered","top10Deaths","setTop10Deaths","currentTop10Chart","setCurrentTop10Chart","useEffect","topInfected","topRecovered","topDeaths","switchChart","chart","top10InfectedChart","length","labels","countryRegion","datasets","label","backgroundColor","options","legend","display","title","text","animation","top10RecoveredChart","top10DeathsChart","barChart","toUpperCase","containerTop10Switch","Button","chartSwitch","onClick","containerChart","CountryPicker","fetchedCountries","setFetchedCountries","currentCountry","setCurrentCountry","fetchAPI","FormControl","formControl","Select","labelId","id","customSelect","onChange","e","target","handleCountryChange","i","MenuItem","key","TabNavigate","path","currentTab","setCurrentTab","handleTabClick","tab","linkFocus","link","to","Header","bg","Covid","state","fetchedData","setTimeout","setState","this","React","Component","About","nameActive","handleNavigation","window","currentTarget","prev","scrollY","addEventListener","aboutContainer","briefContainer","skillActive","frame","App","location","pathname","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ac9ec6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Header_bg__3lPs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Covid_container__37YPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutContainer\":\"About_aboutContainer__2kDbv\",\"frame\":\"About_frame__aBFAA\",\"breath\":\"About_breath__1HA1V\",\"briefContainer\":\"About_briefContainer__39FQn\",\"nameActive\":\"About_nameActive__1fNuu\",\"nameFadeIn\":\"About_nameFadeIn__AB3uV\",\"skillActive\":\"About_skillActive__1tAn9\",\"skillFadeIn\":\"About_skillFadeIn__DIoR-\",\"educationContainer\":\"About_educationContainer__3du16\",\"educationIllustration\":\"About_educationIllustration__1gTia\",\"educationList\":\"About_educationList__e8jrs\",\"experienceContainer\":\"About_experienceContainer__3OpVc\",\"experienceIllustration\":\"About_experienceIllustration__FZrwG\",\"experienceList\":\"About_experienceList__3jR2g\",\"educationTimeline\":\"About_educationTimeline__djV7e\",\"event\":\"About_event__1CDgx\",\"content\":\"About_content__3lGNI\",\"dot\":\"About_dot__wDMC_\",\"time\":\"About_time__3oPr_\",\"description\":\"About_description__ZS5TG\",\"retroRainbow\":\"About_retroRainbow__3Y8cP\"};","import React from \"react\";\nimport { CardContent, Typography, Grid, Paper } from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = (props) => {\n    const { confirmed, recovered, deaths, lastUpdate } = props.data;\n    if (!confirmed || !recovered || !deaths || !lastUpdate) {\n        return \"Loading...\";\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={4}>\n                    <Paper className={cx(styles.infected)}>\n                        <CardContent>\n                        <Typography\n                            color='textSecondary'\n                            gutterBottom>\n                            INFECTED\n                        </Typography>\n                        <Typography\n                            variant='body2'>\n                            Number of active case\n                        </Typography>\n                        <Typography\n                            variant='h5'>\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator='.'\n                            />\n                        </Typography>\n                        <Typography\n                            color='textSecondary'>\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>                        \n                    </CardContent>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Paper className={cx(styles.recovered)}>\n                        <CardContent>\n                        <Typography\n                            color='textSecondary'\n                            gutterBottom>\n                            RECOVERED\n                        </Typography>\n                        <Typography\n                            variant='body2'>\n                            Number of active case\n                        </Typography>\n                        <Typography\n                            variant='h5'>\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator='.'\n                            />\n                        </Typography>\n                        <Typography\n                            color='textSecondary'>\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>                        \n                    </CardContent>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Paper className={cx(styles.deaths)}>\n                        <CardContent>\n                        <Typography\n                            color='textSecondary'\n                            gutterBottom>\n                            DEATHS\n                        </Typography>\n                        <Typography\n                            variant='body2'>\n                            Number of active case\n                        </Typography>\n                        <Typography\n                            variant='h5'>\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator='.'\n                            />\n                        </Typography>\n                        <Typography\n                            color='textSecondary'>\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>                        \n                    </CardContent>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Cards;\n","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async (country) => {\n    let changeableUrl = country ? `${url}/countries/${country}` : url\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl)\n        return { confirmed, recovered, deaths, lastUpdate }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`)\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n        return modifiedData\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`)\n\n        return countries.map(country => country.name)\n    } catch (error) {\n\n    }\n}\n\nexport const fetchTop10Infected = async () => {\n    try {\n        let { data } = await axios.get(`${url}/confirmed`)        \n        return data.slice(0,9)\n    } catch (error) {\n\n    }\n}\nexport const fetchTop10Recovered = async () => {\n    try {\n        let { data } = await axios.get(`${url}/recovered`)        \n        return data.slice(0,9)\n    } catch (error) {\n\n    }\n}\nexport const fetchTop10Deaths = async () => {\n    try {\n        let { data } = await axios.get(`${url}/deaths`)        \n        return data.slice(0,9)\n    } catch (error) {\n\n    }\n}","import React, { useState, useEffect } from \"react\"\nimport { Bar } from \"react-chartjs-2\"\nimport { Button } from \"@material-ui/core\"\n\nimport styles from \"./Charts.module.css\"\nimport {\n    fetchTop10Infected,\n    fetchTop10Recovered,\n    fetchTop10Deaths,\n} from \"../../api\"\n\nconst Charts = (props) => {\n    const [top10Infected, setTop10Infected] = useState([])\n    const [top10Recovered, setTop10Recovered] = useState([])\n    const [top10Deaths, setTop10Deaths] = useState([])\n    const [currentTop10Chart, setCurrentTop10Chart] = useState(\"\")\n    const {\n        data: { confirmed, recovered, deaths },\n        country,\n    } = props\n\n    useEffect(() => {\n        if (!country) {\n            const fetchData = async () => {\n                let topInfected = await fetchTop10Infected()\n                let topRecovered = await fetchTop10Recovered()\n                let topDeaths = await fetchTop10Deaths()\n                setTop10Infected(topInfected)\n                setTop10Recovered(topRecovered)\n                setTop10Deaths(topDeaths)\n            }\n            fetchData()\n        } else {\n            setCurrentTop10Chart('COUNTRY')\n        }\n    }, [country])    \n    \n    const switchChart = (chart) => {  \n        setCurrentTop10Chart(chart)\n    }\n    const top10InfectedChart = top10Infected.length ? (\n        <Bar\n            data={{\n                labels: top10Infected.map((country) => country.countryRegion),\n                datasets: [\n                    {\n                        label: \"People\",\n                        backgroundColor: [\n                            \"rgb(252, 82, 3)\",\n                            \"rgb(95, 176, 63)\",\n                            \"rgb(57, 66, 97)\",\n                            \"rgb(114, 71, 179)\",\n                            \"rgb(142, 37, 148)\",\n                            \"rgb(184, 55, 111)\",\n                            \"rgb(176, 196, 116)\",\n                            \"rgb(82, 29, 13)\",\n                            \"rgb(40, 150, 156)\",\n                            \"rgb(237, 100, 230)\",\n                        ],\n                        data: top10Infected.map((country) => country.confirmed),\n                    },\n                ],\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: \"TOP 10 INFECTED COUNTRY\" },\n            }}\n            animation\n        />\n    ) : null\n    const top10RecoveredChart = top10Recovered.length ? (\n        <Bar\n            data={{\n                labels: top10Recovered.map((country) => country.countryRegion),\n                datasets: [\n                    {\n                        label: \"People\",\n                        backgroundColor: [\n                            \"rgb(252, 82, 3)\",\n                            \"rgb(95, 176, 63)\",\n                            \"rgb(57, 66, 97)\",\n                            \"rgb(114, 71, 179)\",\n                            \"rgb(142, 37, 148)\",\n                            \"rgb(184, 55, 111)\",\n                            \"rgb(176, 196, 116)\",\n                            \"rgb(82, 29, 13)\",\n                            \"rgb(40, 150, 156)\",\n                            \"rgb(237, 100, 230)\",\n                        ],\n                        data: top10Recovered.map(\n                            (country) => country.recovered\n                        ),\n                    },\n                ],\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: \"TOP 10 RECOVERED COUNTRY\" },\n            }}\n            animation\n        />\n    ) : null\n    const top10DeathsChart = top10Deaths.length ? (\n        <Bar\n            data={{\n                labels: top10Deaths.map((country) => country.countryRegion),\n                datasets: [\n                    {\n                        label: \"People\",\n                        backgroundColor: [\n                            \"rgb(252, 82, 3)\",\n                            \"rgb(95, 176, 63)\",\n                            \"rgb(57, 66, 97)\",\n                            \"rgb(114, 71, 179)\",\n                            \"rgb(142, 37, 148)\",\n                            \"rgb(184, 55, 111)\",\n                            \"rgb(176, 196, 116)\",\n                            \"rgb(82, 29, 13)\",\n                            \"rgb(40, 150, 156)\",\n                            \"rgb(237, 100, 230)\",\n                        ],\n                        data: top10Deaths.map((country) => country.deaths),\n                    },\n                ],\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: \"TOP 10 DEATHS COUNTRY\" },\n            }}\n            animation\n        />\n    ) : null\n\n    const barChart = confirmed ? (\n        <Bar\n            data={{\n                labels: [\"INFECTED\", \"RECOVERED\", \"DEATHS\"],\n                datasets: [\n                    {\n                        label: \"People\",\n                        backgroundColor: [\n                            \"rgb(255, 158, 110)\",\n                            \"rgb(153, 204, 51)\",\n                            \"rgb(252, 0, 0)\",\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value],\n                    },\n                ],\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: country.toUpperCase() },\n            }}\n            animation\n        />\n    ) : null\n    return (\n        <div className={styles.container}>\n            <div className={styles.containerTop10Switch}>\n                <Button\n                    className={styles.chartSwitch}\n                    onClick={() => switchChart('INFECTED')}\n                >\n                    TOP 10 INFECTED\n                </Button>\n                <Button\n                    className={styles.chartSwitch}\n                    onClick={() => switchChart('RECOVERED')}\n                >\n                    TOP 10 RECOVERED\n                </Button>\n                <Button\n                    className={styles.chartSwitch}\n                    onClick={() => switchChart('DEATHS')}\n                >\n                    TOP 10 DEATHS\n                </Button>\n            </div>                   \n            <div className={styles.containerChart}>{currentTop10Chart == 'COUNTRY' ? barChart : currentTop10Chart == 'INFECTED' ? top10InfectedChart : currentTop10Chart == 'RECOVERED' ? top10RecoveredChart : currentTop10Chart == 'DEATHS'? top10DeathsChart : top10InfectedChart }</div>\n        </div>\n    )\n}\n\nexport default Charts\n","import React, { useState, useEffect } from \"react\";\nimport {\n    FormControl,\n    MenuItem,\n    Select,\n} from \"@material-ui/core\";\n\nimport { fetchCountries } from \"../../api\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nconst CountryPicker = (props) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    const [currentCountry, setCurrentCountry] = useState('Global')\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        };\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    var handleCountryChange = country => {        \n        setCurrentCountry(country)\n        props.handleCountryChange(country)        \n    }\n    return (\n        <FormControl className={styles.formControl}>\n            <span className={styles.label}>{currentCountry.toUpperCase()}</span>\n            <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value=''\n                className={styles.customSelect}\n                onChange={(e) => handleCountryChange(e.target.value)}\n                label=\"Country\"\n            >\n                {fetchedCountries.map((country, i) => (\n                    <MenuItem key={i} value={country}>\n                        {country.toUpperCase()}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n};\n\nexport default CountryPicker;\n","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport styles from \"./TabNavigate.module.css\"\n\nconst TabNavigate = ({ path }) => {\n    const [currentTab, setCurrentTab] = useState(\n        path == \"/about\" ? \"ABOUT\" : \"COVID\"\n    )\n\n    const handleTabClick = (tab) => {\n        setCurrentTab(tab)\n    }\n\n    return (\n        <div className={styles.TabNavigate}>\n            <Link\n                className={\n                    currentTab == \"COVID\" ? styles.linkFocus : styles.link\n                }\n                onClick={() => {\n                    handleTabClick(\"COVID\")\n                }}\n                to=\"/\"\n            >\n                COVID 19\n            </Link>\n            <Link\n                className={\n                    currentTab == \"ABOUT\" ? styles.linkFocus : styles.link\n                }\n                onClick={() => {\n                    handleTabClick(\"ABOUT\")\n                }}\n                to=\"/about\"\n            >\n                ABOUT ME\n            </Link>\n        </div>\n    )\n}\n\nexport default TabNavigate\n","import React from 'react'\nimport styles from \"./Header.module.css\";\n\nconst Header = () => {\n    \n    return (\n        <div className={styles.bg}>C O V I D 1 9</div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport { Cards, Charts, CountryPicker, Header } from '../../components'\nimport { fetchData } from '../../api'\nimport styles from './Covid.module.css'\n\nclass Covid extends React.Component {\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData()\n        this.setState({ data: fetchedData })\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country)\n        setTimeout(() => {\n            this.setState({\n                data: fetchedData,\n                country: country\n            })\n\n        }, 500);\n    }\n\n    render() {\n        const { data, country } = this.state\n        return (\n            <div className={styles.container}>\n                <Header />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Charts data={data} country={country} />\n            </div>\n        )\n    }\n}\n\nexport default Covid","import React from 'react'\n\nimport styles from './About.module.css'\n// import education from '../../assets/education.png'\n// import experience from '../../assets/experience.png'\n\nclass About extends React.Component {\n    state = {\n        nameActive: false\n    }\n\n    componentDidMount() {\n        this.prev = window.scrollY;\n        window.addEventListener('scroll', e => this.handleNavigation(e));\n    }\n\n    handleNavigation = (e) => {\n        const window = e.currentTarget;\n\n        if (this.prev > window.scrollY) {\n            console.log(\"scrolling up\");\n        } else if (this.prev < window.scrollY) {\n            console.log(\"scrolling down\");\n        }\n        this.prev = window.scrollY;\n    };\n\n    render() {\n        return (\n            <div className={styles.aboutContainer}>\n                <div className={styles.briefContainer}>\n                    <div className={styles.nameActive}>\n                        NHAN NGUYEN\n                    </div>\n                    <div className={styles.skillActive}>\n                        &lt; Web Developer /&gt;\n                    </div>\n                </div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>\n                <div className={styles.frame}></div>                \n                {/* <div className={styles.educationContainer}>\n                    <div className={styles.educationIllustration}>\n                        <img src={education} height={'70%'} width={'70%'} />\n                    </div>\n                    <div className={styles.educationList}>\n                        <h2>STUDY</h2>\n                        <ul className={styles.educationTimeline}>\n                            <li className={styles.event}>\n                                <div className={styles.time}>2015 - 2019</div>\n                                <div className={styles.dot}></div>\n                                <h2 className={styles.content}>Ton Duc Thang University</h2>\n                                <span className={styles.description}>Computer Science</span>\n                            </li>\n                            <li className={styles.event}>\n                                <div className={styles.time}>2018 - Present</div>\n                                <div className={styles.dot}></div>\n                                <h2 className={styles.content}>DXC Technology Vietnam</h2>\n                                <span className={styles.description}>Node JS Developer</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className={styles.experienceContainer}>\n                    <div className={styles.experienceList}>\n                        <h2>PROJECT</h2>\n                        <ul className={styles.educationTimeline}>\n                            <li className={styles.event}>\n                                <div className={styles.time}>2015 - 2019</div>\n                                <div className={styles.dot}></div>\n                                <h2 className={styles.content}>Ton Duc Thang University</h2>\n                                <span className={styles.description}>Computer Science</span>\n                            </li>\n                            <li className={styles.event}>\n                                <div className={styles.time}>2018 - Present</div>\n                                <div className={styles.dot}></div>\n                                <h2 className={styles.content}>DXC Technology Vietnam</h2>\n                                <span className={styles.description}>Node JS Developer</span>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className={styles.experienceIllustration}>\n                        <img src={experience} height={'90%'} width={'90%'} />\n                    </div>\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default About","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport Covid from './pages/Covid'\nimport About from './pages/About'\nimport { TabNavigate } from './components'\n\nclass App extends React.Component {    \n    constructor(props) {\n        super(props)\n        this.path = window.location.pathname\n    }\n    render() {\n        const path = this.path\n        return (\n            <div>\n                <TabNavigate path={path}/>\n                <Switch>\n                    <Route component={Covid} exact path={'/'} />\n                    <Route component={About} exact path={'/about'} />\n                </Switch>\n            </div>\n\n        )\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\",\"containerTop10Switch\":\"Charts_containerTop10Switch__biCjq\",\"chartSwitch\":\"Charts_chartSwitch__1YaTS\",\"containerChart\":\"Charts_containerChart__29mPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TabNavigate\":\"TabNavigate_TabNavigate__PqlKs\",\"link\":\"TabNavigate_link__2Soxa\",\"linkFocus\":\"TabNavigate_linkFocus__3FvZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"label\":\"CountryPicker_label__1mJt8\",\"customSelect\":\"CountryPicker_customSelect__-2R-I\"};"],"sourceRoot":""}